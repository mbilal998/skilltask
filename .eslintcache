[{"/Users/apple/React/skilltask/src/index.js":"1","/Users/apple/React/skilltask/src/reportWebVitals.js":"2","/Users/apple/React/skilltask/src/App.js":"3","/Users/apple/React/skilltask/src/app/Routes.js":"4","/Users/apple/React/skilltask/src/app/theme/Theme.js":"5","/Users/apple/React/skilltask/src/app/views/Edit/Edit.js":"6","/Users/apple/React/skilltask/src/app/views/Home/Home.js":"7","/Users/apple/React/skilltask/src/app/assets/Info.js":"8","/Users/apple/React/skilltask/src/app/views/SkillModel/Model.js":"9","/Users/apple/React/skilltask/src/app/views/Add/Add.js":"10"},{"size":500,"mtime":1611032557594,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1611032557595,"results":"13","hashOfConfig":"12"},{"size":310,"mtime":1611032557591,"results":"14","hashOfConfig":"12"},{"size":947,"mtime":1611152026473,"results":"15","hashOfConfig":"12"},{"size":190,"mtime":1611064310839,"results":"16","hashOfConfig":"12"},{"size":6120,"mtime":1611209397051,"results":"17","hashOfConfig":"12"},{"size":3399,"mtime":1611208768302,"results":"18","hashOfConfig":"12"},{"size":732,"mtime":1611138051521,"results":"19","hashOfConfig":"12"},{"size":5165,"mtime":1611142245401,"results":"20","hashOfConfig":"12"},{"size":4436,"mtime":1611208736457,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1dnkpqg",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/Users/apple/React/skilltask/src/index.js",[],["47","48"],"/Users/apple/React/skilltask/src/reportWebVitals.js",[],"/Users/apple/React/skilltask/src/App.js",["49"],"import logo from './logo.svg';\nimport './App.css';\nimport {ThemeProvider} from '@material-ui/core/styles';\nimport Routes from './app/Routes';\nimport Theme from './app/theme/Theme';\n\nfunction App() {\n  return (\n    <ThemeProvider theme={Theme}>\n      <Routes />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","/Users/apple/React/skilltask/src/app/Routes.js",[],"/Users/apple/React/skilltask/src/app/theme/Theme.js",[],"/Users/apple/React/skilltask/src/app/views/Edit/Edit.js",[],"/Users/apple/React/skilltask/src/app/views/Home/Home.js",["50"],"import React, { useState } from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { Button, Container } from \"@material-ui/core\";\nimport { useHistory } from 'react-router-dom';\n\nconst StyledTableCell = withStyles((theme) => ({\n    head: {\n        backgroundColor: theme.palette.common.black,\n        color: theme.palette.common.white,\n    },\n    body: {\n        fontSize: 14,\n    },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n    root: {\n        '&:nth-of-type(odd)': {\n            backgroundColor: theme.palette.action.hover,\n        },\n    },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n    table: {\n        minWidth: 650,\n    },\n});\nfunction Home() {\n    const classes = useStyles();\n    let history = useHistory();\n\n    const user2 = JSON.parse(window.localStorage.getItem('mydata_2'));\n\n    const [user, setUser] = useState(user2);\n\n    return (\n\n        <Container maxWidth=\"lg\" >\n            <Button style={{ marginTop: 20 }} variant=\"contained\" color=\"primary\" onClick={() => history.push('/add')}>Add</Button>\n            <TableContainer component={Paper} style={{ marginTop: 20 }}>\n                <Table className={classes.table} aria-label=\"customized table\">\n                    <TableHead>\n                        <TableRow>\n                            <StyledTableCell >Name</StyledTableCell>\n                            <StyledTableCell align=\"right\">FatherName</StyledTableCell>\n                            <StyledTableCell align=\"right\">Designation&nbsp;</StyledTableCell>\n                            <StyledTableCell align=\"right\">Company&nbsp;</StyledTableCell>\n                            <StyledTableCell align=\"right\">Address&nbsp;</StyledTableCell>\n                            <StyledTableCell align=\"right\">Action&nbsp;</StyledTableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {user.length > 0 && user.map((row, index) => (\n                            <StyledTableRow key={row.Name}>\n                                <StyledTableCell component=\"th\" scope=\"row\">{row.Name}</StyledTableCell>\n                                <StyledTableCell align=\"right\">{row.FatherName}</StyledTableCell>\n                                <StyledTableCell align=\"right\">{row.Designation}</StyledTableCell>\n                                <StyledTableCell align=\"right\">{row.Company}</StyledTableCell>\n                                <StyledTableCell align=\"right\">{row.Address}</StyledTableCell>\n                                <StyledTableCell align=\"right\">\n                                    <Button variant=\"contained\" color=\"primary\" onClick={() => history.push('/edit', { data: row, index: index })}>Edit</Button>\n                                </StyledTableCell>\n                            </StyledTableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </Container >\n    );\n}\n\nexport default Home;\n","/Users/apple/React/skilltask/src/app/assets/Info.js",[],["51","52"],"/Users/apple/React/skilltask/src/app/views/SkillModel/Model.js",["53"],"import React from 'react';\nimport { useState } from 'react';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { Container, makeStyles, Button } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    paper: {\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n}));\nfunction Model(props) {\n\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n    const [state, setState] = React.useState({\n        checkedA: false,\n        checkedB: false,\n        checkedC: false,\n        checkedD: false,\n        checkedE: false,\n        checkedF: false,\n        checkedG: false,\n        checkedH: false,\n        checkedI: false,\n    });\n\n    const handleChange = (event) => {\n\n        setState({ ...state, [event.target.name]: event.target.checked });\n        props.handleCallback(event.target.checked);\n    };\n\n    return (\n        <>\n            <div>\n                <Button variant=\"contained\" color=\"primary\" type=\"button\" onClick={handleOpen}>Skills</Button>\n            </div>\n            <Container maxWidth=\"sm\">\n                <Modal\n                    aria-labelledby=\"transition-modal-title\"\n                    aria-describedby=\"transition-modal-description\"\n                    className={classes.modal}\n                    open={open}\n                    onClose={handleClose}\n                    closeAfterTransition\n                    BackdropComponent={Backdrop}\n                    BackdropProps={{\n                        timeout: 500,\n                    }}\n                >\n                    <Fade in={open}>\n                        <div className={classes.paper}>\n                            <FormGroup row>\n                                <FormControlLabel\n                                    control={<Checkbox checked={state.checkedA} onChange={handleChange} name=\"checkedA\" />}\n                                    label=\"PHP\"\n                                />\n                                <FormControlLabel\n                                    control={<Checkbox checked={state.checkedB} onChange={handleChange} name=\"checkedB\" />}\n                                    label=\"HTML\"\n                                />\n                            </FormGroup>\n                            <FormGroup row>\n                                <FormControlLabel\n                                    control={<Checkbox checked={state.checkedC} onChange={handleChange} name=\"checkedC\" />}\n                                    label=\"JS\"\n                                />\n                                <FormControlLabel\n                                    control={<Checkbox checked={state.checkedD} onChange={handleChange} name=\"checkedD\" />}\n                                    label=\"CSS\"\n                                />\n                            </FormGroup>\n                            <FormGroup row>\n                                <FormControlLabel\n                                    control={<Checkbox checked={state.checkedE} onChange={handleChange} name=\"checkedE\" />}\n                                    label=\"SCSS\"\n                                />\n                                <FormControlLabel\n                                    control={<Checkbox checked={state.checkedF} onChange={handleChange} name=\"checkedF\" />}\n                                    label=\"REACTJS\"\n                                />\n                            </FormGroup>\n                            <FormGroup row>\n                                <FormControlLabel\n                                    control={<Checkbox checked={state.checkedG} onChange={handleChange} name=\"checkedG\" />}\n                                    label=\"NODEJS\"\n                                />\n                                <FormControlLabel\n                                    control={<Checkbox checked={state.checkedH} onChange={handleChange} name=\"checkedH\" />}\n                                    label=\"POSTGRESS\"\n                                />\n                            </FormGroup>\n                            <FormGroup row>\n                                <FormControlLabel\n                                    control={<Checkbox checked={state.checkedI} onChange={handleChange} name=\"checkedI\" />}\n                                    label=\"LARAVEL\"\n                                />\n                            </FormGroup>\n                        </div>\n                    </Fade>\n                </Modal>\n            </Container>\n        </>\n    );\n}\n\nexport default Model;\n","/Users/apple/React/skilltask/src/app/views/Add/Add.js",[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":1,"column":8,"nodeType":"60","messageId":"61","endLine":1,"endColumn":12},{"ruleId":"58","severity":1,"message":"62","line":42,"column":18,"nodeType":"60","messageId":"61","endLine":42,"endColumn":25},{"ruleId":"54","replacedBy":"63"},{"ruleId":"56","replacedBy":"64"},{"ruleId":"58","severity":1,"message":"65","line":2,"column":10,"nodeType":"60","messageId":"61","endLine":2,"endColumn":18},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'setUser' is assigned a value but never used.",["66"],["67"],"'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]
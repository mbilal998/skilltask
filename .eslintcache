[{"/Users/apple/React/skilltask/src/index.js":"1","/Users/apple/React/skilltask/src/reportWebVitals.js":"2","/Users/apple/React/skilltask/src/App.js":"3","/Users/apple/React/skilltask/src/app/Routes.js":"4","/Users/apple/React/skilltask/src/app/theme/Theme.js":"5","/Users/apple/React/skilltask/src/app/views/Edit/Edit.js":"6","/Users/apple/React/skilltask/src/app/views/Home/Home.js":"7","/Users/apple/React/skilltask/src/app/assets/Info.js":"8","/Users/apple/React/skilltask/src/app/views/SkillModel/Model.js":"9","/Users/apple/React/skilltask/src/app/views/Add/Add.js":"10","/Users/apple/React/skilltask/src/app/views/HomeHeadless/Homeheadless.js":"11","/Users/apple/React/skilltask/src/app/views/ReactSelect/ReactSelect.js":"12"},{"size":500,"mtime":1611032557594,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1611032557595,"results":"15","hashOfConfig":"14"},{"size":310,"mtime":1611032557591,"results":"16","hashOfConfig":"14"},{"size":1941,"mtime":1611218170471,"results":"17","hashOfConfig":"14"},{"size":190,"mtime":1611064310839,"results":"18","hashOfConfig":"14"},{"size":5936,"mtime":1611314026281,"results":"19","hashOfConfig":"14"},{"size":3506,"mtime":1611311424640,"results":"20","hashOfConfig":"14"},{"size":732,"mtime":1611138051521,"results":"21","hashOfConfig":"14"},{"size":5165,"mtime":1611142245401,"results":"22","hashOfConfig":"14"},{"size":4254,"mtime":1611307391441,"results":"23","hashOfConfig":"14"},{"size":3208,"mtime":1611311028243,"results":"24","hashOfConfig":"14"},{"size":1197,"mtime":1611325301551,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1dnkpqg",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"28"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/apple/React/skilltask/src/index.js",[],["57","58"],"/Users/apple/React/skilltask/src/reportWebVitals.js",[],"/Users/apple/React/skilltask/src/App.js",["59"],"import logo from './logo.svg';\nimport './App.css';\nimport {ThemeProvider} from '@material-ui/core/styles';\nimport Routes from './app/Routes';\nimport Theme from './app/theme/Theme';\n\nfunction App() {\n  return (\n    <ThemeProvider theme={Theme}>\n      <Routes />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","/Users/apple/React/skilltask/src/app/Routes.js",["60"],"import Edit from \"./views/Edit/Edit\";\nimport Home from \"./views/Home/Home\";\nimport Add from \"./views/Add/Add\";\nimport HomeHeadless from './views/HomeHeadless/Homeheadless';\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport { AppBar } from \"@material-ui/core\";\nimport '../App.css'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\nfunction Routes() {\n  const classes = useStyles();\n  return (\n    <Router>\n      <div>\n        <div className={classes.root}>\n          <AppBar position=\"static\">\n            <Toolbar variant=\"dense\">\n              <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n                <MenuIcon />\n              </IconButton>\n              <Link style={{ color: 'white' }} className=\"topmenu\" to=\"/\">Home</Link>\n              <Link style={{ color: 'white', marginLeft: 20 }} className=\"topmenu\" to=\"/homeheadless\">Home 2</Link>\n            </Toolbar>\n          </AppBar>\n        </div>\n\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/add\">\n            <Add name=\"edit\" />\n          </Route>\n          <Route path=\"/edit\">\n            <Edit name=\"edit\" />\n          </Route>\n          <Route path=\"/homeheadless\">\n            <HomeHeadless name=\"HomeHeadLess\" />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default Routes;\n","/Users/apple/React/skilltask/src/app/theme/Theme.js",[],"/Users/apple/React/skilltask/src/app/views/Edit/Edit.js",[],"/Users/apple/React/skilltask/src/app/views/Home/Home.js",["61"],"import React, { useState } from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { Button, Container } from \"@material-ui/core\";\nimport { useHistory } from 'react-router-dom';\n\nimport SelectReact from '../ReactSelect/ReactSelect';\n\nconst StyledTableCell = withStyles((theme) => ({\n    head: {\n        backgroundColor: theme.palette.common.black,\n        color: theme.palette.common.white,\n    },\n    body: {\n        fontSize: 14,\n    },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n    root: {\n        '&:nth-of-type(odd)': {\n            backgroundColor: theme.palette.action.hover,\n        },\n    },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n    table: {\n        minWidth: 650,\n    },\n});\nfunction Home() {\n    const classes = useStyles();\n    let history = useHistory();\n\n    const user2 = JSON.parse(window.localStorage.getItem('mydata_2'));\n\n    const [user, setUser] = useState(user2);\n\n    return (\n\n        <Container maxWidth=\"lg\" >\n            <Button style={{ marginTop: 20 }} variant=\"contained\" color=\"primary\" onClick={() => history.push('/add')}>Add</Button>\n            <TableContainer component={Paper} style={{ marginTop: 20 }}>\n                <Table className={classes.table} aria-label=\"customized table\">\n                    <TableHead>\n                        <TableRow>\n                            <StyledTableCell >Name</StyledTableCell>\n                            <StyledTableCell align=\"right\">FatherName</StyledTableCell>\n                            <StyledTableCell align=\"right\">Designation&nbsp;</StyledTableCell>\n                            <StyledTableCell align=\"right\">Company&nbsp;</StyledTableCell>\n                            <StyledTableCell align=\"right\">Address&nbsp;</StyledTableCell>\n                            <StyledTableCell align=\"right\">Action&nbsp;</StyledTableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {user.length > 0 && user.map((row, index) => (\n                            <StyledTableRow key={row.Name}>\n                                <StyledTableCell component=\"th\" scope=\"row\">{row.Name}</StyledTableCell>\n                                <StyledTableCell align=\"right\">{row.FatherName}</StyledTableCell>\n                                <StyledTableCell align=\"right\">{row.Designation}</StyledTableCell>\n                                <StyledTableCell align=\"right\">{row.Company}</StyledTableCell>\n                                <StyledTableCell align=\"right\">{row.Address}</StyledTableCell>\n                                <StyledTableCell align=\"right\">\n                                    <Button variant=\"contained\" color=\"primary\" onClick={() => history.push('/edit', { data: row, index: index })}>Edit</Button>\n                                </StyledTableCell>\n                            </StyledTableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            <hr></hr>\n            <SelectReact />\n\n        </Container >\n\n    );\n}\n\nexport default Home;\n","/Users/apple/React/skilltask/src/app/assets/Info.js",[],["62","63"],"/Users/apple/React/skilltask/src/app/views/SkillModel/Model.js",["64"],"import React from 'react';\nimport { useState } from 'react';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { Container, makeStyles, Button } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    paper: {\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n}));\nfunction Model(props) {\n\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n    const [state, setState] = React.useState({\n        checkedA: false,\n        checkedB: false,\n        checkedC: false,\n        checkedD: false,\n        checkedE: false,\n        checkedF: false,\n        checkedG: false,\n        checkedH: false,\n        checkedI: false,\n    });\n\n    const handleChange = (event) => {\n\n        setState({ ...state, [event.target.name]: event.target.checked });\n        props.handleCallback(event.target.checked);\n    };\n\n    return (\n        <>\n            <div>\n                <Button variant=\"contained\" color=\"primary\" type=\"button\" onClick={handleOpen}>Skills</Button>\n            </div>\n            <Container maxWidth=\"sm\">\n                <Modal\n                    aria-labelledby=\"transition-modal-title\"\n                    aria-describedby=\"transition-modal-description\"\n                    className={classes.modal}\n                    open={open}\n                    onClose={handleClose}\n                    closeAfterTransition\n                    BackdropComponent={Backdrop}\n                    BackdropProps={{\n                        timeout: 500,\n                    }}\n                >\n                    <Fade in={open}>\n                        <div className={classes.paper}>\n                            <FormGroup row>\n                                <FormControlLabel\n                                    control={<Checkbox checked={state.checkedA} onChange={handleChange} name=\"checkedA\" />}\n                                    label=\"PHP\"\n                                />\n                                <FormControlLabel\n                                    control={<Checkbox checked={state.checkedB} onChange={handleChange} name=\"checkedB\" />}\n                                    label=\"HTML\"\n                                />\n                            </FormGroup>\n                            <FormGroup row>\n                                <FormControlLabel\n                                    control={<Checkbox checked={state.checkedC} onChange={handleChange} name=\"checkedC\" />}\n                                    label=\"JS\"\n                                />\n                                <FormControlLabel\n                                    control={<Checkbox checked={state.checkedD} onChange={handleChange} name=\"checkedD\" />}\n                                    label=\"CSS\"\n                                />\n                            </FormGroup>\n                            <FormGroup row>\n                                <FormControlLabel\n                                    control={<Checkbox checked={state.checkedE} onChange={handleChange} name=\"checkedE\" />}\n                                    label=\"SCSS\"\n                                />\n                                <FormControlLabel\n                                    control={<Checkbox checked={state.checkedF} onChange={handleChange} name=\"checkedF\" />}\n                                    label=\"REACTJS\"\n                                />\n                            </FormGroup>\n                            <FormGroup row>\n                                <FormControlLabel\n                                    control={<Checkbox checked={state.checkedG} onChange={handleChange} name=\"checkedG\" />}\n                                    label=\"NODEJS\"\n                                />\n                                <FormControlLabel\n                                    control={<Checkbox checked={state.checkedH} onChange={handleChange} name=\"checkedH\" />}\n                                    label=\"POSTGRESS\"\n                                />\n                            </FormGroup>\n                            <FormGroup row>\n                                <FormControlLabel\n                                    control={<Checkbox checked={state.checkedI} onChange={handleChange} name=\"checkedI\" />}\n                                    label=\"LARAVEL\"\n                                />\n                            </FormGroup>\n                        </div>\n                    </Fade>\n                </Modal>\n            </Container>\n        </>\n    );\n}\n\nexport default Model;\n","/Users/apple/React/skilltask/src/app/views/Add/Add.js",[],"/Users/apple/React/skilltask/src/app/views/HomeHeadless/Homeheadless.js",["65","66"],"import { useMemo, useState } from 'react';\nimport styled from 'styled-components'\nimport { useTable } from 'react-table'\nimport { useHistory } from 'react-router-dom';\nimport { Button } from \"@material-ui/core\";\n\nconst Styles = styled.div`\n  padding: 1rem;\n\n  table {\n    border-spacing: 0;\n    border: 1px solid black;\n\n    tr {\n      :last-child {\n        td {\n          border-bottom: 0;\n        }\n      }\n    }\n\n    th,\n    td {\n      margin: 0;\n      padding: 0.5rem;\n      border-bottom: 1px solid black;\n      border-right: 1px solid black;\n\n      :last-child {\n        border-right: 0;\n      }\n    }\n  }\n`\n\nfunction Table({ columns, data }) {\n\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n    } = useTable({\n        columns,\n        data,\n    })\n\n    return (\n        <table {...getTableProps()}>\n            <thead>\n                {headerGroups.map(headerGroup => (\n                    <tr {...headerGroup.getHeaderGroupProps()}>\n                        {headerGroup.headers.map(column => (\n                            <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n                        ))}\n                    </tr>\n                ))}\n            </thead>\n            <tbody {...getTableBodyProps()}>\n                {\n                    rows.map((row, i) => {\n                        prepareRow(row)\n                        return (\n                            <tr {...row.getRowProps()}>\n                                {row.cells.map(cell => {\n                                    return <td {...cell.getCellProps()}>\n                                        {cell.render('Cell')}\n                                    </td>\n                                })}\n                            </tr>\n                        )\n                    })\n                }\n            </tbody>\n        </table>\n    )\n}\n\nfunction HomeHeadless() {\n\n    let history = useHistory();\n\n    const information = JSON.parse(window.localStorage.getItem('mydata_2'));\n    const [data, setData] = useState(information);\n\n    const columns = useMemo(\n        () => [\n            {\n                Header: 'Name',\n                accessor: 'Name',\n            },\n            {\n                Header: 'FatherName',\n                accessor: 'FatherName',\n            },\n            {\n                Header: 'Designation',\n                accessor: 'Designation',\n            },\n            {\n                Header: 'Company',\n                accessor: 'Company',\n            },\n            {\n                Header: 'Address',\n                accessor: 'Address',\n            },\n            {\n                Header: 'Edit',\n                accessor: 'Edit',\n                Cell: cell => (\n                    <Button variant=\"contained\" color=\"primary\" value={cell.accessor} onClick={() => history.push('/edit', { data: cell.row.original, index: cell.row.index })} >\n                        Edit\n                    </Button>\n                )\n            }\n        ],\n        []\n    )\n    return (\n        <Styles>\n            <Table columns={columns} data={data} />\n        </Styles>\n    )\n}\n\nexport default HomeHeadless;\n","/Users/apple/React/skilltask/src/app/views/ReactSelect/ReactSelect.js",["67"],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":1,"column":8,"nodeType":"74","messageId":"75","endLine":1,"endColumn":12},{"ruleId":"72","severity":1,"message":"76","line":9,"column":8,"nodeType":"74","messageId":"75","endLine":9,"endColumn":18},{"ruleId":"72","severity":1,"message":"77","line":44,"column":18,"nodeType":"74","messageId":"75","endLine":44,"endColumn":25},{"ruleId":"68","replacedBy":"78"},{"ruleId":"70","replacedBy":"79"},{"ruleId":"72","severity":1,"message":"80","line":2,"column":10,"nodeType":"74","messageId":"75","endLine":2,"endColumn":18},{"ruleId":"72","severity":1,"message":"81","line":85,"column":18,"nodeType":"74","messageId":"75","endLine":85,"endColumn":25},{"ruleId":"82","severity":1,"message":"83","line":119,"column":9,"nodeType":"84","endLine":119,"endColumn":11,"suggestions":"85"},{"ruleId":"72","severity":1,"message":"86","line":13,"column":28,"nodeType":"74","messageId":"75","endLine":13,"endColumn":45},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Typography' is defined but never used.","'setUser' is assigned a value but never used.",["87"],["88"],"'useState' is defined but never used.","'setData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useMemo has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["89"],"'setselectedOption' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"90","fix":"91"},"Update the dependencies array to be: [history]",{"range":"92","text":"93"},[3061,3063],"[history]"]